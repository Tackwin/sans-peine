// This file was generated by https://github.com/judah-caruso/C.
// It can be #loaded and used like the module version.
#scope_module;

c :: struct {
    #if OS == .WINDOWS {
        char                   :: #type u8;
        short                  :: #type s16;
        int                    :: #type s32;
        long                   :: #type s32;
        float                  :: #type float32;
        double                 :: #type float64;
        short_int              :: #type s16;
        long_long              :: #type s64;
        long_long_int          :: #type s64;
        unsigned_char          :: #type u8;
        unsigned_short         :: #type u16;
        unsigned_short_int     :: #type u16;
        unsigned               :: #type u32;
        unsigned_int           :: #type u32;
        unsigned_long          :: #type u32;
        unsigned_long_long     :: #type u64;
        unsigned_long_long_int :: #type u64;
        signed_char            :: #type s8;
        signed_short           :: #type s16;
        signed_short_int       :: #type s16;
        signed                 :: #type s32;
        signed_int             :: #type s32;
        signed_long            :: #type s32;
        signed_long_long       :: #type s64;
        signed_long_long_int   :: #type s64;
        size_t                 :: #type u64;
        intptr_t               :: #type s64;
        uintptr_t              :: #type u64;
        ptrdiff_t              :: #type u64;
        wchar_t                :: #type u16;
        long_double            :: #type float64;
    }
    else #if OS == .LINUX {
        char                   :: #type u8;
        short                  :: #type s16;
        int                    :: #type s32;
        long                   :: #type s64;
        float                  :: #type float32;
        double                 :: #type float64;
        short_int              :: #type s16;
        long_long              :: #type s64;
        long_long_int          :: #type s64;
        unsigned_char          :: #type u8;
        unsigned_short         :: #type u16;
        unsigned_short_int     :: #type u16;
        unsigned               :: #type u32;
        unsigned_int           :: #type u32;
        unsigned_long          :: #type u64;
        unsigned_long_long     :: #type u64;
        unsigned_long_long_int :: #type u64;
        signed_char            :: #type s8;
        signed_short           :: #type s16;
        signed_short_int       :: #type s16;
        signed                 :: #type s32;
        signed_int             :: #type s32;
        signed_long            :: #type s64;
        signed_long_long       :: #type s64;
        signed_long_long_int   :: #type s64;
        size_t                 :: #type u64;
        intptr_t               :: #type s64;
        uintptr_t              :: #type u64;
        ptrdiff_t              :: #type u64;
        wchar_t                :: #type u32;
        ssize_t                :: #type s64;
        long_double            :: #type float64;
    }
}